services:
  postgres:
    image: postgres:17
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ./Database/init_db_schema.sql:/docker-entrypoint-initdb.d/db.sql
      - ./Database/dummy_data.sql:/docker-entrypoint-initdb.d/dummy_data.sql
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 5
  backend:
    build: ./Backend
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 8080:8080
    environment:
      - PORT=8080
      - PG_USER=postgres
      - PG_HOST=postgres
      - PG_DATABASE=postgres
      - PG_PASSWORD=postgres
      - PG_PORT=5432
      - NODE_ENV=dev
      - WEBAPP_URL=http://localhost
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - SESSION_SECRET=${SESSION_SECRET}
  frontend:
    build: ./FrontEnd
    ports:
      - 80:80
    depends_on:
      - backend
    environment:
      - BACKEND_HOST=backend
      - BACKEND_PORT=8080
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: user-name@domain-name.com
      PGADMIN_DEFAULT_PASSWORD: strong-password